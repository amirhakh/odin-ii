/*---------------------------------------------------------------------------------------------
 * (function: create_all_driver_nets_in_this_module)
 * 	Use to define all the nets that will connect to instantiated nodes.  This means we go
 * 	through the var_declare_list of module variables and all registers are made
 * 	as drivers.
 *-------------------------------------------------------------------------------------------*/
void create_all_driver_nets_in_this_module(ast_node_t* module_items, char *instance_name_prefix)
{
	/* with the top module we need to visit the entire ast tree */
	int i, j;
	assert(module_items->type == MODULE_ITEMS);

	/* search for VAR_DECLARE_LISTS */
	if (module_items->num_children > 0)
	{
		for (i = 0; i < module_items->num_children; i++)
		{
			if (module_items->children[i]->type == VAR_DECLARE_LIST)
			{
				/* go through the vars in this declare list */
				for (j = 0; j < module_items->children[i]->num_children; j++)
				{	
					assert(module_items->children[i]->children[j]->type == VAR_DECLARE);
					if (!(module_items->children[i]->children[j]->types.variable.is_input))
					{
						/* create nets based on this driver as the name */
						define_nets_with_driver(module_items->children[i]->children[j], instance_name_prefix);
					}
				}
			}
		}
	}
	else
	{
		printf("Module is empty\n");
		exit(NETLIST_ERROR);
	}
}
