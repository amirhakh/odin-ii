  <architecture>
  
  <!-- jluu and ken: ODIN II specific config -->
  <models>
    <model name="multiply">
      <input_ports>
      <port name="a"/>
      <port name="b"/>
      </input_ports>
      <output_ports> 
      <port name="out"/> 
      </output_ports> 
    </model>

    <model name="single_port_ram">
      <input_ports>
      <port name="we"/>     <!-- control -->
      <port name="addr"/>  <!-- address lines -->
      <port name="data"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="clk" is_clock="1"/>  <!-- memories are often clocked -->
      </input_ports>
      <output_ports> 
      <port name="out"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      </output_ports> 
    </model>

    <model name="dual_port_ram">
      <input_ports>
      <port name="we1"/>     <!-- write enable -->
      <port name="we2"/>     <!-- write enable -->
      <port name="addr1"/>  <!-- address lines -->
      <port name="addr2"/>  <!-- address lines -->
      <port name="data1"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="data2"/>  <!-- data lines can be broken down into smaller bit widths minimum size 1 -->
      <port name="clk" is_clock="1"/>  <!-- memories are often clocked -->
      </input_ports>
      <output_ports> 
      <port name="out1"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      <port name="out2"/>   <!-- output can be broken down into smaller bit widths minimum size 1 -->
      </output_ports> 
    </model>
  </models>
  <!-- jluu and ken: ODIN II specific config ends -->

  <!-- jluu and ken: Physical descriptions begin -->
  <layout auto="1.0"/>
    <device>
      <sizing R_minW_nmos="5726.870117" R_minW_pmos="15491.700195" ipin_mux_trans_size="1.000000"/>
      <timing C_ipin_cblock="1.191000e-14" T_ipin_cblock="1.482000e-10"/>
      <area grid_logic_tile_area="30000.000000"/>
      <chan_width_distr>
        <io width="1.000000"/>
        <x distr="uniform" peak="1.000000"/>
        <y distr="uniform" peak="1.000000"/>
      </chan_width_distr>
      <switch_block type="wilton" fs="3"/>
    </device>
    <switchlist>
      <switch type="mux" name="0" R="94.841003" Cin="1.537000e-14" Cout="2.194000e-13" Tdel="6.562000e-11" mux_trans_size="10.000000" buf_size="1"/>
    </switchlist>
    <segmentlist>
      <segment freq="1.000000" length="3" type="unidir" Rmetal="11.064550" Cmetal="4.727860e-14">
        <mux name="0"/>
        <sb type="pattern">1 1 1 1</sb>
        <cb type="pattern">1 1 1</cb>
      </segment>
      <segment freq="1.000000" length="2" type="unidir" Rmetal="11.064550" Cmetal="4.727860e-14">
        <mux name="0"/>
        <sb type="pattern">1 1 1</sb>
        <cb type="pattern">1 1</cb>
      </segment>
    </segmentlist>
    <typelist>
      <io capacity="3" t_inpad="7.734000e-11" t_outpad="4.395000e-11">
        <fc_in type="frac">0.250000</fc_in>
        <fc_out type="frac">1.000000</fc_out>
      </io>
      <type name=".clb">
        
        <!-- jluu New proposal method (BEGIN) -->
        <pb_type name="clb">
          <input name="I" num_pins="22"/>
          <output name="O" num_pins="10"/>
          <clock name="clk" num_pins="1"/>

          <pb_type name="ble" num_pb="10">
            <input name="in" num_pins="4"/>
            <output name="out" num_pins="1"/>
            <clock name="clk" num_pins="1"/>

            <pb_type name="lut_4" blif_model=".names" num_pb="1" class="lut">
              <input name="in" num_pins="4" port_class="lut_in"/>
              <output name="out" num_pins="1" port_class="lut_out"/>
            </pb_type>
            <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop">
              <input name="D" num_pins="1" port_class="D"/>
              <output name="Q" num_pins="1" port_class="Q"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
            </pb_type>

            <!-- jedit hack must put all same element names in order (ie. direct direct mux, not direct mux direct, otherwise the parser miscounts children -->
            <interconnect>
              <direct input="lut_4.out" output="ff.D"/>
              <direct input="ble.in" output="lut_4.in"/>
              <direct input="ble.clk" output="ff.clk"/>
              <mux input="ff.Q lut_4.out" output="ble.out"/>
            </interconnect>
          </pb_type>

          <interconnect>
            <complete input="clb.I ble[9:0].out" output="ble[9:0].in"/>
            <complete input="clb.clk" output="ble[9:0].clk"/>
            <direct input="ble[9:0].out" output="clb.O"/>
          </interconnect>
        </pb_type>
        
        <!-- jluu New proposal method (END) -->

        <fc_in type="frac">0.250000</fc_in>
        <fc_out type="frac">1.000000</fc_out>
        <pinclasses>
          <class type="in">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 </class>
          <class type="out">22 23 24 25 26 27 28 29 30 31 </class>
          <class type="global">32 </class>
        </pinclasses>
        <pinlocations>
          <loc side="left">1 5 9 13 17 21 23 27 31 </loc>
          <loc side="right">3 7 11 15 19 25 29 </loc>
          <loc side="top">2 6 10 14 18 24 28 32 </loc>
          <loc side="bottom">0 4 8 12 16 20 22 26 30 </loc>
        </pinlocations>
        <gridlocations>
          <loc type="fill" priority="1"/>
        </gridlocations>
      </type>

      <type name=".memory">
        <!-- jluu New proposal method part 2 (BEGIN) -->
        <!-- Memory block with varying size and port abilities -->
        <pb_type name="block_RAM">
          <input name="addr" num_pins="11"/>
          <input name="din" num_pins="4"/>
          <input name="we" num_pins="1"/>
          <output name="dout" num_pins="4"/>
          <clock name="clk" num_pins="1"/>

            <!-- Declare a 2048x1 memory type -->
            <mode name="mem_2048x1_mode">
              <pb_type name="mem_2048x1" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
                <input name="addr" num_pins="11" port_class="address"/>
                <input name="data" num_pins="1" port_class="data_in"/>
                <input name="we" num_pins="1" port_class="write_en"/>
                <output name="out" num_pins="1" port_class="data_out"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>
              <interconnect>
                <direct input="block_RAM.addr[10:0]" output="mem_2048x1.addr"/>
                <direct input="block_RAM.din[0:0]" output="mem_2048x1.data"/>
                <direct input="block_RAM.we" output="mem_2048x1.we"/>
                <direct input="block_RAM.clk" output="mem_2048x1.clk"/>
                <direct input="mem_2048x1.out" output="block_RAM.dout[0:0]"/>
              </interconnect>
            </mode>

            <!-- Declare a 1024x2 memory type -->
            <mode name="mem_1024x2_mode">
              <pb_type name="mem_1024x2" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
                <input name="addr" num_pins="10" port_class="address"/>
                <input name="data" num_pins="2" port_class="data_in"/>
                <input name="we" num_pins="1" port_class="write_en"/>
                <output name="out" num_pins="2" port_class="data_out"/>
                <clock name="clk" num_pins="1" port_class="clock"/>                
              </pb_type>
              <interconnect>
                <direct input="block_RAM.addr[9:0]" output="mem_1024x2.addr"/>
                <direct input="block_RAM.din[1:0]" output="mem_1024x2.data"/>
                <direct input="block_RAM.we" output="mem_1024x2.we"/>
                <direct input="block_RAM.clk" output="mem_1024x2.clk"/>
                <direct input="mem_1024x2.out" output="block_RAM.dout[1:0]"/>
              </interconnect>
            </mode>

            <!-- Declare a 512x4 memory type -->
            <mode name="mem_512x4_mode">
              <pb_type name="mem_512x4" blif_model=".subckt single_port_ram" class="memory" num_pb="1">
                <input name="addr" num_pins="9" port_class="address"/>
                <input name="data" num_pins="4" port_class="data_in"/>
                <input name="we" num_pins="1" port_class="write_en"/>
                <output name="out" num_pins="4" port_class="data_out"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>
              <interconnect>
                <direct input="block_RAM.addr[8:0]" output="mem_512x4.addr"/>
                <direct input="block_RAM.din[3:0]" output="mem_512x4.data"/>
                <direct input="block_RAM.we" output="mem_512x4.we"/>
                <direct input="block_RAM.clk" output="mem_512x4.clk"/>
                <direct input="mem_512x4.out" output="block_RAM.dout[3:0]"/>
              </interconnect>
            </mode>
        </pb_type>

        <!-- jluu New proposal method part 2 (END) -->
        <fc_in type="frac">0.250000</fc_in>
        <fc_out type="frac">1.000000</fc_out>
        <pinclasses>
          <class type="in">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 </class>
          <class type="out">22 23 24 25 26 27 28 29 30 31 </class>
          <class type="global">32 </class>
        </pinclasses>
        <pinlocations>
          <loc side="left">1 5 9 13 17 21 23 27 31 </loc>
          <loc side="right">3 7 11 15 19 25 29 </loc>
          <loc side="top">2 6 10 14 18 24 28 32 </loc>
          <loc side="bottom">0 4 8 12 16 20 22 26 30 </loc>
        </pinlocations>
        <gridlocations>
          <loc type="col" start="4" repeat="15" priority="3"/>
          <loc type="rel" pos="0.4"  priority="5"/>
        </gridlocations>
      </type>

      <type name=".dp_memory_stub">
        <!-- jedit stub -->
        <pb_type name="dp_memory_stub" blif_model=".subckt dual_port_ram" class="memory">
          <input name="addr1" num_pins="11" port_class="address1"/>
          <input name="addr2" num_pins="11" port_class="address2"/>
          <input name="data1" num_pins="2" port_class="data_in1"/>
          <input name="data2" num_pins="2" port_class="data_in2"/>
          <input name="we1" num_pins="1" port_class="write_en1"/>
          <input name="we2" num_pins="1" port_class="write_en2"/>
          
          <output name="out1" num_pins="2" port_class="data_out1"/>
          <output name="out2" num_pins="2" port_class="data_out2"/>
          <clock name="clk" num_pins="1" port_class="clock"/>
        </pb_type>

        <!-- jluu New proposal method part 2 (END) -->
        <fc_in type="frac">0.250000</fc_in>
        <fc_out type="frac">1.000000</fc_out>
        <pinclasses>
          <class type="in">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 </class>
          <class type="out">22 23 24 25 26 27 28 29 30 31 </class>
          <class type="global">32 </class>
        </pinclasses>
        <pinlocations>
          <loc side="left">1 5 9 13 17 21 23 27 31 </loc>
          <loc side="right">3 7 11 15 19 25 29 </loc>
          <loc side="top">2 6 10 14 18 24 28 32 </loc>
          <loc side="bottom">0 4 8 12 16 20 22 26 30 </loc>
        </pinlocations>
        <gridlocations>
          <loc type="col" start="1" repeat="10" priority="4"/>
          <loc type="rel" pos="0.6"  priority="5"/>        </gridlocations>
      </type>

      <!-- This is the 36*36 uniform mult -->
      <type name=".mult_36" height="3">
        <pb_type name="block_mult">
          <input name="a" num_pins="36"/>
          <input name="b" num_pins="36"/>
          <output name="out" num_pins="72"/>
          <clock name="clk" num_pins="1"/>

          <mode name="mult_36x36">
            <pb_type name="mult_36x36_slice" num_pb="1">
              <input name="A_cfg" num_pins="36"/>
              <input name="B_cfg" num_pins="36"/>
              <output name="OUT_cfg" num_pins="72"/>
              <clock name="clk" num_pins="1"/>

              <pb_type name="reg_36x36_A" blif_model=".latch" num_pb="36" class="flipflop">
                <input name="D" num_pins="1" port_class="D"/>
                <output name="Q" num_pins="1" port_class="Q"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>
              <pb_type name="reg_36x36_B" blif_model=".latch" num_pb="36" class="flipflop">
                <input name="D" num_pins="1" port_class="D"/>
                <output name="Q" num_pins="1" port_class="Q"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>
              <pb_type name="reg_36x36_out" blif_model=".latch" num_pb="72" class="flipflop">
                <input name="D" num_pins="1" port_class="D"/>
                <output name="Q" num_pins="1" port_class="Q"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
              </pb_type>

              <pb_type name="mult_36x36" blif_model=".subckt multiply" num_pb="1">
                <input name="a" num_pins="36"/>
                <input name="b" num_pins="36"/>
                <output name="out" num_pins="72"/>
              </pb_type>

              <interconnect>
                <direct input="mult_36x36_slice.A_cfg" output="reg_36x36_A[35:0].D"/>
                <direct input="mult_36x36_slice.B_cfg" output="reg_36x36_B[35:0].D"/>
                <direct input="mult_36x36.out" output="reg_36x36_out[71:0].D"/>

                <mux input="mult_36x36_slice.A_cfg reg_36x36_A[35:0].Q" output="mult_36x36.a"/>
                <mux input="mult_36x36_slice.B_cfg reg_36x36_B[35:0].Q" output="mult_36x36.b"/>
                <mux input="mult_36x36.out reg_36x36_out[71:0].Q" output="mult_36x36_slice.OUT_cfg"/>

                <complete input="mult_36x36_slice.clk" output="reg_36x36_A[35:0].clk"/>
                <complete input="mult_36x36_slice.clk" output="reg_36x36_B[35:0].clk"/>
                <complete input="mult_36x36_slice.clk" output="reg_36x36_out[71:0].clk"/>
              </interconnect>
            </pb_type>
            <interconnect>
              <direct input="block_mult.a" output="mult_36x36_slice.A_cfg"/>
              <direct input="block_mult.b" output="mult_36x36_slice.A_cfg"/>
              <direct input="mult_36x36_slice.OUT_cfg" output="block_mult.out"/>
              <direct input="block_mult.clk" output="mult_36x36_slice.clk"/>
            </interconnect>
          </mode>
          
          <mode  name="two_divisible_mult_18x18">
            <pb_type name="divisible_mult_18x18" num_pb="2">
              <input name="a" num_pins="18"/>
              <input name="b" num_pins="18"/>
              <output name="out" num_pins="36"/>
              <clock name="clk" num_pins="1"/>

              <mode name="mult_18x18">
                <pb_type name="mult_18x18_slice" num_pb="1">
                  <input name="A_cfg" num_pins="18"/>
                  <input name="B_cfg" num_pins="18"/>
                  <output name="OUT_cfg" num_pins="36"/>
                  <clock name="clk" num_pins="1"/>

                  <pb_type name="reg_18x18_A" blif_model=".latch" num_pb="18" class="flipflop">
                    <input name="D" num_pins="1" port_class="D"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <clock name="clk" port_class="clock" num_pins="1"/>
                  </pb_type>
                  <pb_type name="reg_18x18_B" blif_model=".latch" num_pb="18" class="flipflop">
                    <input name="D" num_pins="1" port_class="D"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <clock name="clk" port_class="clock" num_pins="1"/>
                  </pb_type>
                  <pb_type name="reg_18x18_out" blif_model=".latch" num_pb="36" class="flipflop">
                    <input name="D" num_pins="1" port_class="D"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <clock name="clk" port_class="clock" num_pins="1"/>
                  </pb_type>

                  <pb_type name="mult_18x18" blif_model=".subckt multiply" num_pb="1">
                    <input name="a" num_pins="18"/>
                    <input name="b" num_pins="18"/>
                    <output name="out" num_pins="36"/>
                  </pb_type>

                  <interconnect>
                    <direct input="mult_18x18_slice.A_cfg" output="reg_18x18_A[17:0].D"/>
                    <direct input="mult_18x18_slice.B_cfg" output="reg_18x18_B[17:0].D"/>
                    <direct input="mult_18x18.out" output="reg_18x18_out[35:0].D"/>
                    <mux input="mult_18x18_slice.A_cfg reg_18x18_A[17:0].Q" output="mult_18x18.a"/>
                    <mux input="mult_18x18_slice.B_cfg reg_18x18_B[17:0].Q" output="mult_18x18.b"/>

                    <mux input="mult_18x18.out reg_18x18_out[35:0].Q" output="mult_18x18_slice.OUT_cfg"/>

                    <complete input="mult_18x18_slice.clk" output="reg_18x18_A[17:0].clk"/>
                    <complete input="mult_18x18_slice.clk" output="reg_18x18_B[17:0].clk"/>
                    <complete input="mult_18x18_slice.clk" output="reg_18x18_out[35:0].clk"/>
                  </interconnect>
                </pb_type>
                <interconnect>
                  <direct input="divisible_mult_18x18.a" output="mult_18x18_slice.A_cfg"/>
                  <direct input="divisible_mult_18x18.b" output="mult_18x18_slice.A_cfg"/>
                  <direct input="mult_18x18_slice.OUT_cfg" output="divisible_mult_18x18.out"/>
                  <complete input="divisible_mult_18x18.clk" output="mult_18x18_slice.clk"/>
                </interconnect>
              </mode>

              <mode name="two_mult_9x9">
                <pb_type name="mult_9x9_slice" num_pb="2">
                  <input name="A_cfg" num_pins="9"/>
                  <input name="B_cfg" num_pins="9"/>
                  <output name="OUT_cfg" num_pins="18"/>
                  <clock name="clk" num_pins="1"/>

                  <pb_type name="reg_9x9_A" blif_model=".latch" num_pb="9" class="flipflop">
                    <input name="D" num_pins="1" port_class="D"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <clock name="clk" num_pins="1" port_class="clock"/>
                  </pb_type>
                  <pb_type name="reg_9x9_B" blif_model=".latch" num_pb="9" class="flipflop">
                    <input name="D" num_pins="1" port_class="D"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <clock name="clk" num_pins="1" port_class="clock"/>
                  </pb_type>
                  <pb_type name="reg_9x9_out" blif_model=".latch" num_pb="18" class="flipflop">
                    <input name="D" num_pins="1" port_class="D"/>
                    <output name="Q" num_pins="1" port_class="Q"/>
                    <clock name="clk" num_pins="1" port_class="clock"/>
                  </pb_type>

                  <pb_type name="mult_9x9" blif_model=".subckt multiply" num_pb="1">
                    <input name="a" num_pins="9"/>
                    <input name="b" num_pins="9"/>
                    <output name="out" num_pins="18"/>
                  </pb_type>

                  <interconnect>
                    <direct input="mult_9x9_slice.A_cfg" output="reg_9x9_A[8:0].D"/>
                    <direct input="mult_9x9_slice.B_cfg" output="reg_9x9_B[8:0].D"/>
                    <direct input="mult_9x9.out" output="reg_9x9_out[17:0].D"/>
                    <mux input="mult_9x9_slice.A_cfg reg_9x9_A[8:0].Q" output="mult_9x9.a"/>
                    <mux input="mult_9x9_slice.B_cfg reg_9x9_B[8:0].Q" output="mult_9x9.b"/>
                    <mux input="mult_9x9.out reg_9x9_out[17:0].Q" output="mult_9x9_slice.OUT_cfg"/>

                    <complete input="mult_9x9_slice.clk" output="reg_9x9_A[8:0].clk"/>
                    <complete input="mult_9x9_slice.clk" output="reg_9x9_B[8:0].clk"/>
                    <complete input="mult_9x9_slice.clk" output="reg_9x9_out[17:0].clk"/>
                  </interconnect>
                </pb_type>
                <interconnect>
                  <direct input="divisible_mult_18x18.a" output="mult_9x9_slice[1:0].A_cfg"/>
                  <direct input="divisible_mult_18x18.b" output="mult_9x9_slice[1:0].A_cfg"/>
                  <direct input="mult_9x9_slice[1:0].OUT_cfg" output="divisible_mult_18x18.out"/>
                  <complete input="divisible_mult_18x18.clk" output="mult_9x9_slice[1:0].clk"/>
                </interconnect>
              </mode>
            </pb_type>
            <interconnect>
              <direct input="block_mult.a" output="divisible_mult_18x18[1:0].a"/>
              <direct input="block_mult.b" output="divisible_mult_18x18[1:0].a"/>
              <direct input="divisible_mult_18x18[1:0].out" output="block_mult.out"/>
              <complete input="block_mult.clk" output="divisible_mult_18x18[1:0].clk"/>
            </interconnect>
          </mode>
        </pb_type>

        <fc_in type="frac">0.25</fc_in>
        <fc_out type="full" />
        <pinclasses>
          <class type="in">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35</class>
          <class type="out">36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71</class>
          <class type="global">72</class>
        </pinclasses>

        <pinlocations>
          <loc side="left">0 8 16 24 32 40 48 56 64 65</loc>
          <loc side="left" offset="1">1 9 17 25 33 41 49 57 66</loc>
          <loc side="left" offset="2">2 10 18 26 34 42 50 58 67</loc>
          <loc side="top" offset="2">3 11 19 27 35 43 51 59 68</loc>
          <loc side="right">4 12 20 28 36 44 52 60 69</loc>
          <loc side="right" offset="1">5 13 21 29 37 45 53 61 70</loc>
          <loc side="right" offset="2">6 14 22 30 38 46 54 62 71</loc>
          <loc side="bottom">7 15 23 31 39 47 55 63 72</loc>
        </pinlocations>

        <gridlocations>
          <loc type="col" start="2" repeat="5" priority="2"/>
          <loc type="rel" pos="0.5"  priority="3"/>
        </gridlocations>
      </type>
    </typelist>
  </architecture>
